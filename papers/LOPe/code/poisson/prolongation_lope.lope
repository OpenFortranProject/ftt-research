Module Prolongation

Interface prolongate
   module procedure prolongate_1D_assign, prolongate_1D_convolve
End Interface

Contains

!!!!!
! This version will require "loop" fusion to optimize so there is
! only one kernel to run.
!
Pure Subroutine prolongate_1D_assign(U1h, U2h, S, N, device)
  real, intent(out)   :: U1h(0:N)     ! fine grid   (includes halo)
  real, intent(in )   :: U2h(0:N/2)   ! coarse grid (includes halo)
  real, intent(in )   :: S(3)         ! stencil
  integer, intent(in) :: N            ! fine grid size (N-1 interior pts)
  integer, intent(in) :: device       ! execution device

  U1h(1:N-1:2)[device] = S(1)*U2h(0:N/2-2)[device]  &
                       + S(3)*U2h(1:N/2-1)[device]  [[device]]   ! take from left and right
  U1h(2:N-2:2)[device] = S(2)*U2h(1:N/2-1)[device]  [[device]]   ! take from center

End Subroutine prolongate_1D_assign


Pure CONCURRENT Subroutine prolongate_1D_convolve(U1h, U2h, S, is)
  real, intent(out), HALO(:) :: U1h       ! fine grid
  real, intent(in ), HALO(:) :: U2h       ! coarse grid
  real, intent(in )          :: S(2,0:1)  ! stencil
  integer, intent(in)        :: is        ! stencil selector (even=0, odd=1)
  
  U1h(0) = sum( S(:,is)*U2h(0:1) )

End Subroutine prolongate_1D_convolve


End Module Prolongation
